@startuml
class Activity {
    - onCreate(Bundle savedInstanceState): void
    - onCreateOptionsMenu(Menu menu): boolean
}

class TitlePage {
    - goToPreGameSelection(View view): void
    - goToPreGameSelectionMulti(View view): void
    - goToLeaderboard(View view): void
    - goToOptions(View view): void
}

class Options {
}

class Leaderboard {
}

class PreGameSelection {
    - setDiff(View view): void
    - setAnimal(View view): void
    - setBackground(View view): void
    - goToSinglePlayer(View view): void
}

class PreGameSelectionMulti {
}

class SinglePlayer {
    - displayWord(int wordIndex, String word): void
    - displayTime(long secondsLeft): void
    - displayScore(int score): void
    - highlightWord(int wordIndex, String word, int letterIndex): void
    - pauseGame(View view): void
    - pausedContinue(View view): void
    - pausedNewGame(View view): void
    - pausedMainMenu(View view): void
}

class PostGameScreen {
    - goToTitlePage(View view): void
    - goToPreGameSelection(View view): void
}

class SinglePlayerModel {
    - typedLetter(char letter): void
    - populateDisplayedList(): void
    - getScore(): int
}

class TypingWordDB {
    - openConnection(): void
    - closeConnection(): void
    - prepareStatements(): void
    - getSomething(): String
}

class WordData {
    + getId(): long
    + setId(long): void
    + getWord(): String
    + setWord(String): void
}

class WordDBHelper {
    - DATABASE_NAME: String
    - DATABASE_TABLE: String
    - DATABASE_VERSION: int
    - KEY_ID: String
    - KEY_WORDDATA: String
    - KEY_DIFFICULTY: String
    + onCreate(SQLiteDatabase): void
    + onUpgrade(SQLiteDatabase, int, int): void
}

class WordDB {
    - dbHelper: WordDBHelper
    + createWordData(String, int): WordData
    + deleteWordData(WordData): void
    + getAllWords(): Map
}

class States {
    {static} Enum difficulty
    {static} Enum update
}

TitlePage -|> Activity
Options -|> Activity
Leaderboard -|> Activity
PreGameSelection -|> Activity
PreGameSelectionMulti -|> Activity
SinglePlayer -|> Activity
PostGameScreen -|> Activity

SinglePlayer "1" -- "1" SinglePlayerModel : uses >
SinglePlayerModel -- States : uses >

WordDB ..> WordData : uses >
WordDB -- WordDBHelper : uses >
@enduml

