@startuml

package Controllers {
    abstract class BaseController {
        +buildCheckingAccount() : CheckingAccount
        +getBalance() : BigDecimal
        +getWeeklyExpense() : BigDecimal
    }

    class RegisterIncomeController {
        -incomeTypeRepository : IncomeTypeRepository
        +getIncomeTypes() : List
        +createIncome(:BigDecimal, :IncomeType, :String, :Date) : void
        +buildCheckingAccount() : CheckingAccount
    }

    BaseController <|-- RegisterIncomeController
}

package Presentation {
    abstract class BaseUI {
        +show() : void
        +showHeader() : void
        +showFooter() : void
        +getTitle() : String
        +showContent() : void
        +buildBaseController() : BaseController
    }

    class RegisterIncomeUI {
        -controller : RegisterIncomeController
        -listIncomeType : List
        +showContent() : void
        +getTitle() : String
        +buildBaseController() : BaseController
    }

    BaseUI <|-- RegisterIncomeUI
}

package Model {
    class CheckingAccount {
        -incomeRepo : IncomeRepository
        -expenseRepo : ExpenseRepository
        +getBalance() : BigDecimal
        +getExpensesTotal() : BigDecimal
        +getIncomesTotal() : BigDecimal
        +setValue(:BigDecimal) : void
        +getValue() : BigDecimal
        +add(:Income) : void
        +add(:Expense) : void
        +getWeeklyExpense() : BigDecimal
    }

    class Income {
        -incomeType : IncomeType
        -dateOccurred : Date
        +getDateOccurred() : Date
        +getIncomeType() : IncomeType
        +setDateOccurred(:Date) : void
        +setIncomeType(:IncomeType) : void
    }

    CheckingAccount --> IncomeRepository
    CheckingAccount --> ExpenseRepository
}

package Persistence {
    class IncomeRepository {
        -instance : IncomeRepository
        -listIncome : List
        +getInstance() : IncomeRepository
        +save(:Income) : void
        +getListIncome() : List
    }

    class IncomeTypeRepository {
        -instance : IncomeTypeRepository
        -list : List
        +getInstance() : IncomeTypeRepository
        +save(:IncomeType) : void
        +getIncomeTypes() : List
    }

    IncomeRepository ..> Income
    IncomeTypeRepository ..> IncomeType
}

RegisterIncomeController --> CheckingAccount
RegisterIncomeController --> IncomeTypeRepository
RegisterIncomeUI --> RegisterIncomeController
CheckingAccount --> Income
Income --> IncomeType

@enduml

