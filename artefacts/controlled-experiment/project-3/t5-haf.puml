@startuml

package Controllers {
    abstract class BaseController {
        + buildCheckingAccount() 
        + getBalance() 
        + getWeeklyExpense() 
    }

    class RegisterIncomeController {
        - incomeTypeRepository : IncomeTypeRepository
        + getIncomeTypes() 
        + createIncome(:BigDecimal, :IncomeType, :String, :Date) 
        + buildCheckingAccount() 
    }

    BaseController <|-- RegisterIncomeController
}

package Presentation {
    abstract class BaseUI {
        + show() 
        + showHeader() 
        + showFooter() 
        + getTitle() 
        + showContent() 
        + buildBaseController() 
    }

    class RegisterIncomeUI {
        - controller : RegisterIncomeController
        - listIncomeType : List
        + showContent() 
        + getTitle() 
        + buildBaseController() 
    }

    BaseUI <|-- RegisterIncomeUI
}

package Model {
    class CheckingAccount {
        - incomeRepo : IncomeRepository
        - expenseRepo : ExpenseRepository
        + getBalance() 
        + getExpensesTotal() 
        + getIncomesTotal() 
        + setValue(:BigDecimal) 
        + getValue() 
        + add(:Income) 
        + add(:Expense) 
        + getWeeklyExpense() 
    }

    class Income {
        - incomeType : IncomeType
        - dateOccurred : Date
        + getDateOccurred() 
        + getIncomeType() 
        + setDateOccurred(:Date) 
        + setIncomeType(:IncomeType) 
    }

    class IncomeType
}

CheckingAccount --> IncomeRepository
CheckingAccount --> ExpenseRepository
CheckingAccount --> Income
Income --> IncomeType
RegisterIncomeController --> CheckingAccount
RegisterIncomeController --> IncomeTypeRepository
RegisterIncomeUI --> RegisterIncomeController

package Persistence {
    class IncomeRepository {
        - instance : IncomeRepository
        - listIncome : List
        + getInstance() 
        + save(:Income) 
        + getListIncome() 
    }

    class IncomeTypeRepository {
        - instance : IncomeTypeRepository
        - list : List
        + getInstance() 
        + save(:IncomeType) 
        + getIncomeTypes() 
    }

    IncomeRepository ..> Income
    IncomeTypeRepository ..> IncomeType
}

@enduml

