@startuml

class ItemVisitor {
    visit(Food): int
    visit(Upgrade): int
}

class Food {
    valuedog : int
    valuecat : int
    valuefish : int
    valuepenguin : int
}

class Job {
    id : int
    impactenergy : int
    impacthunger : int
    impacthygiene : int
    impactfun : int
    title : String
    length : int
    image : String
    client : String
    message : String
    reward : int
    species : String
}

class Pet {
    petid : int
    owner : int
    name : String
    type : String
    variant : String
    hunger : int
    energy : int
    fun : int
    hygiene : int
    age : int
    image : String
}

class User {
    userid : int
    username : String
    password : String
    email : String
}

class UserBuilder {
    userid : int
    username : String
    password : String
    email : String
}

class Upgrade {
    property : String
    species : String
    value : int
}

class PetBuilder {
    owner : int
    name : String
    type : String
    variant : String
    image : String
}

class DAO {
    addUser(User): boolean
    checkIfUserExists(User): boolean
    delUser(User): boolean
    updateUser(User): boolean
    addPet(Pet): boolean
    checkIfPetExists(Pet): boolean
    delPet(Pet): boolean
    updatePet(Pet): boolean
    addFood(Food): boolean
    checkIfFoodExists(Food): boolean
    delFood(Food): boolean
    updateFood(Food): boolean
    addUpgrade(Upgrade): boolean
    checkIfUpgradeExists(Upgrade): boolean
    delUpgrade(Upgrade): boolean
    updateUpgrade(Upgrade): boolean
    addJob(Job): boolean
    checkIfJobExists(Job): boolean
    delJob(Job): boolean
    updateJob(Job): boolean
    addFoodOwned(Pet, Food, int): boolean
    addUpgradeOwned(Pet, Upgrade, int): boolean
    updateFoodOwned(Pet, Food, int): boolean
    updateUpgradeOwned(Pet, Upgrade, int): boolean
    delFoodOwned(Pet, Food): boolean
    delUpgradeOwned(Pet, Upgrade): boolean
    addJobOwned(Pet, Job, int): boolean
    updateJobOwned(Pet, Job, int): boolean
    delJobOwned(Pet, Job): boolean
}

@enduml
